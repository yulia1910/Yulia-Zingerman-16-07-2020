{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/city/city.component.ts","webpack:///src/app/city/city.component.html","webpack:///src/app/daily-forecast/daily-forecast.component.ts","webpack:///src/app/daily-forecast/daily-forecast.component.html","webpack:///src/app/favorites/favorites.component.ts","webpack:///src/app/favorites/favorites.component.html","webpack:///src/app/globle.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/http.service.ts","webpack:///src/app/not-found-page/not-found-page.component.ts","webpack:///src/app/not-found-page/not-found-page.component.html","webpack:///src/app/reducers/favorites.Selectors.ts","webpack:///src/app/reducers/favorites.action.ts","webpack:///src/app/reducers/favorites.reducer.ts","webpack:///src/app/weather/weather.component.ts","webpack:///src/app/weather/weather.component.html","webpack:///src/app/weather/weather.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","RoutingComponent","AppComponent","title","selector","templateUrl","styleUrls","AppModule","favorites","instrument","maxAge","logOnly","production","declarations","providers","bootstrap","CityComponent","DailyForecastComponent","FavoritesComponent","store","weatherService","router","header","subscriptions","subscription1","select","subscribe","favoritesArr","map","city","push","getCurrentCondition","key","cond","cityName","Temperature","Imperial","Value","Unit","WeatherText","navigate","toString","unsubscribe","forEach","subscription","api","apiKey","defaultKey","defaultCity","baseApiUrl","location","forecast","imageBaseUrl","currentCondition","HeaderComponent","HttpService","http","endpoint","queryStringParams","get","headers","getHttpHeaders","observe","params","pipe","err","handleError","response","body","errorResponse","providedIn","NotFoundPageComponent","selectFavoritesState","selectFavorites","state","LOAD_FAVORITES","ADD_TO_FAVORITES","REMOVE_FROM_FAVORITES","GetFavorites","payload","type","AddToFavorites","RemoveFromFavorites","favoriteNode","initinalState","favoritesReducer","action","filter","item","WeatherComponent","lacationService","route","currentCity","currencyCityKey","addRemoveAction","snapshot","paramMap","subscription5","length","selectedCountry","name","favorite","getForeCast","errorR","res","dailyForecasts","getForecasts","event","subscription2","getLocations","query","countriesSuggestions","country","Key","LocalizedName","icon","idIcon","subscription3","subscription4","forecasts","DailyForecasts","day","iconUrl","getUrl","Day","Icon","Date","toLocaleString","weekday","dayLong","minTemp","Minimum","maxTemp","Maximum","unit","description","IconPhrase","selected","selectedDay","dispatch","WeatherService","keyWord","queryString","set","cityKey","environment","bootstrapModule","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WeatherComponent } from './weather/weather.component';\nimport { FavoritesComponent } from './favorites/favorites.component';\nimport { NotFoundPageComponent } from './not-found-page/not-found-page.component';\n\n\nconst routes: Routes = [\n  { path: '', component: WeatherComponent },\n  { path: 'weather', component: WeatherComponent },\n  { path: 'weather/:key/:city', component: WeatherComponent },\n  { path: 'favorites', component: FavoritesComponent },\n  { path: '**', component: NotFoundPageComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const RoutingComponent = [WeatherComponent, FavoritesComponent]\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Weather';\n}\n","\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NotFoundPageComponent } from './not-found-page/not-found-page.component';\nimport { RoutingComponent } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HeaderComponent } from './header/header.component';\nimport {AutoCompleteModule} from 'primeng/autocomplete';\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { DailyForecastComponent } from './daily-forecast/daily-forecast.component';\nimport { StoreModule } from '@ngrx/store';\nimport { favoritesReducer } from './reducers/favorites.reducer';\n/* import { reducers, metaReducers } from './reducers'; */\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { CityComponent } from './city/city.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RoutingComponent,\n    NotFoundPageComponent,\n    HeaderComponent,\n    DailyForecastComponent,\n    CityComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AutoCompleteModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    StoreModule.forRoot({favorites: favoritesReducer}),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    StoreRouterConnectingModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { favoriteLocation } from '../models';\n\n@Component({\n  selector: 'app-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.css']\n})\nexport class CityComponent implements OnInit {\n  @Input() location: favoriteLocation;\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main\">\n    <div class=\"name\">{{ location.cityName }}</div>\n    <div class=\"temp\">{{ location.temp }}</div>\n    <div class=\"description\">{{ location.description }}</div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ShortForecast } from '../models';\n\n@Component({\n  selector: 'app-daily-forecast',\n  templateUrl: './daily-forecast.component.html',\n  styleUrls: ['./daily-forecast.component.css']\n})\nexport class DailyForecastComponent implements OnInit {\n@Input() forecast: ShortForecast;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"main\" [ngClass]='{selected: forecast.selected == true }'>\n    <div class=\"day\">{{ forecast.day }}</div>\n    <img [src]=\"forecast.iconUrl\" width=\"80%\">\n    <div class=\"temp\">\n        <div class=\"max\">{{ forecast.maxTemp }}{{ forecast.unit }}</div>\n        <div class=\"min\">{{ forecast.minTemp }}{{ forecast.unit }}</div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FavoritesState } from '../reducers/favorites.reducer';\nimport { Store } from '@ngrx/store';\nimport { selectFavorites } from '../reducers/favorites.Selectors';\nimport { WeatherService } from '../weather/weather.service';\nimport { switchMap, catchError } from 'rxjs/operators';\nimport { favoriteLocation, Favorite } from '../models';\nimport { CurrentCondition } from '../models';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.css'],\n  providers: [ WeatherService ]\n})\nexport class FavoritesComponent implements OnInit {\n  header = 'Favorite Locations';\n  favorites: favoriteLocation[] = [];\n private subscription1: Subscription;\n private subscriptions: Subscription[] = [];\n  constructor(private store: Store<FavoritesState>,  \n              private weatherService: WeatherService,\n              private router: Router) {}\n\n  ngOnInit(): void {\n    this.subscription1 = this.store.select( selectFavorites ).subscribe( favoritesArr => {\n      favoritesArr.map( city => {\n        this.subscriptions.push( this.weatherService.getCurrentCondition( city.key ).subscribe( (cond: CurrentCondition[])  => {\n          this.favorites.push({\n          \"key\": city.key,\n          \"cityName\": city.cityName,\n          \"temp\": cond[0].Temperature.Imperial.Value + cond[0].Temperature.Imperial.Unit,\n          \"description\": cond[0].WeatherText\n          });\n         \n        }));\n        \n      });\n    }); \n  }\n\n  onClick( key, city ) {\n    this.router.navigate(['weather', key, city.toString()]);\n  }\n\n  ngOnDestroy() {\n    this.subscription1.unsubscribe();\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n}\n","<div class=\"main\" >\n    <app-header [header]=\"header\"></app-header> \n    <div class=\"container d-flex justify-content-start flex-wrap\">\n        <app-city class=\"city\" *ngFor=\"let fav of favorites\" [location]=\"fav\" (click)=\"onClick(fav.key, fav.cityName)\"></app-city>\n    </div>\n</div>\n\n","export const api = {\r\n    //apiKey: 'AoyF1lGC2EoRuVGrTJeAD29GGjUzmlDn',\r\n   // apiKey: 'efVbvA0cJoWkqDkWBsLcUvLwzYmXeZ0d',\r\n    apiKey:'V950odAsNBqkvfjrL8L76oUUwtZZEPGP',\r\n    defaultKey: '215854', //TEL AVIV\r\n    defaultCity: 'Tel aviv',\r\n    baseApiUrl: 'http://dataservice.accuweather.com',\r\n    location: 'locations/v1/cities/autocomplete',\r\n    forecast: 'forecasts/v1/daily/5day/',\r\n    imageBaseUrl: 'https://developer.accuweather.com/sites/default/files/',\r\n    currentCondition: 'currentconditions/v1/',\r\n};","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n  @Input() header: string;\n\n  constructor() { }\n\n}\n","\n<div class=\"main d-flex justify-content-center\">\n    <div class=\"title\">{{ header }}</div>\n    <nav class=\"nav\">\n        <a href=\"weather\">DAILY FORECASTS</a>\n        <a href=\"favorites\">FAVORITES</a>\n    </nav>   \n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport {catchError, tap, map, mergeMap} from 'rxjs/operators';\nimport {isNullOrUndefined} from 'util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  private baseApiUrl = \"http://dataservice.accuweather.com\";\n\n  constructor(private http: HttpClient) { }\n\n  private getHttpHeaders() {\n    return new HttpHeaders({\n      \n    });\n  }\n\n  public get<T>( endpoint: string, queryStringParams?: HttpParams ): Observable<T> {\n \n    return this.http.get<any>(\n      `${this.baseApiUrl}/${endpoint}`,\n        {\n          headers: this.getHttpHeaders(),\n          observe: 'response',\n          params: queryStringParams,\n        }\n    )\n    .pipe(\n      catchError( (err: HttpErrorResponse) => {\n        return this.handleError(err);\n      }),\n      map((response: any) => {\n        return (!isNullOrUndefined(response)) && response.body ? response.body : null;\n      }),\n    );\n  }\n\n  private handleError(errorResponse: HttpErrorResponse) {\n    return throwError('There is a problem with the service. We are notified & working on it. Please try again later.')\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found-page',\n  templateUrl: './not-found-page.component.html',\n  styleUrls: ['./not-found-page.component.css']\n})\nexport class NotFoundPageComponent implements OnInit {\n  header = \"Weather\";\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header [header]=\"header\"></app-header>\n<div class=\"main\">Page not found</div>\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { favoriteNode, FavoritesState } from './favorites.reducer';\r\nimport { Favorite } from '../models';\r\n\r\nexport const selectFavoritesState = createFeatureSelector<FavoritesState>(favoriteNode);\r\n\r\nexport const selectFavorites = createSelector(\r\n    selectFavoritesState,\r\n    (state: FavoritesState): Favorite[] => state.favorites\r\n);","import { Action } from '@ngrx/store';\r\nimport { Favorite } from '../models';\r\n\r\nexport const LOAD_FAVORITES = 'Get All Saved Favorites';\r\nexport const ADD_TO_FAVORITES = 'Add City To Favorites';\r\nexport const REMOVE_FROM_FAVORITES = 'Remove City From Favorites';\r\n\r\nexport class GetFavorites implements Action {\r\n    readonly type = LOAD_FAVORITES;\r\n    constructor( public payload: Favorite ){}\r\n}\r\n\r\nexport class AddToFavorites implements Action {\r\n    readonly type = ADD_TO_FAVORITES;\r\n    constructor( public payload: Favorite ){}\r\n}\r\n\r\nexport class RemoveFromFavorites implements Action {\r\n    readonly type = REMOVE_FROM_FAVORITES;\r\n    constructor( public payload: string ){}\r\n}\r\n\r\nexport type FavoriteActions = GetFavorites\r\n | AddToFavorites\r\n | RemoveFromFavorites;","import { Favorite } from '../models';\r\nimport *  as FromFavoriteActions from './favorites.action';\r\n\r\nexport const favoriteNode = 'favorites';\r\n\r\nexport interface FavoritesState {\r\n    favorites: Favorite[],\r\n}\r\n\r\nconst initinalState: FavoritesState = {\r\n    favorites: []\r\n}\r\n\r\nexport function favoritesReducer( state: FavoritesState = initinalState, action: FromFavoriteActions.FavoriteActions ): FavoritesState{\r\n    switch( action.type ) {\r\n        case FromFavoriteActions.ADD_TO_FAVORITES: {\r\n            return {\r\n                ...state,\r\n                favorites: [...state.favorites, action.payload]\r\n            }\r\n        }\r\n        case FromFavoriteActions.REMOVE_FROM_FAVORITES: {\r\n            return {\r\n                ...state,\r\n                favorites: state.favorites.filter( item => item.key != action.payload )\r\n            }\r\n        }\r\n    default:\r\n        return state\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from './weather.service';\nimport { City, DailyForecasts, ShortForecast, DailyForecast, Favorite, LocationS} from '../models';\nimport { Observable, Subscription } from 'rxjs';\nimport { api } from '../globle';\nimport { FavoritesState } from '../reducers/favorites.reducer';\nimport { Store, select } from '@ngrx/store';\nimport { selectFavorites } from '../reducers/favorites.Selectors';\nimport { combineLatest } from 'rxjs';\nimport { isNullOrUndefined } from 'util';\nimport * as  FavoriteActions from '../reducers/favorites.action';\nimport { ActivatedRoute } from '@angular/router';\nimport { take, catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css'],\n  providers:  [ WeatherService ]\n})\nexport class WeatherComponent implements OnInit {\n\n  location: City[];\n  dailyForecasts: DailyForecasts;\n  title = \" Weather\";\n  currentCity = api.defaultCity;\n  currencyCityKey = api.defaultKey;\n  header: string;\n  selectedCountry: LocationS;\n  selectedDay: ShortForecast;\n  countriesSuggestions: LocationS[];\n  forecasts: ShortForecast[];\n  action: string;\n  favorites: Favorite[];\n  addRemoveAction =\"Add to Favorites\";\n  private subscription1: Subscription;\n  private subscription2: Subscription;\n  private subscription3: Subscription;\n  private subscription4: Subscription;\n  private subscription5: Subscription;\n  errorR: string;\n\n  constructor(private lacationService: WeatherService,\n              private store: Store<FavoritesState>, private route: ActivatedRoute ) { }\n\n  ngOnInit(): void {\n    let key = this.route.snapshot.paramMap.get('key');\n    if( key == null ) {\n      this.subscription5 = this.store.select(selectFavorites ).subscribe( favoritesArr => {\n        if ( favoritesArr.length != 0 ) {\n          if ( favoritesArr.filter( item => item.key == this.currencyCityKey ).length != 0 ) {\n            this.selectedCountry = {\n              key: api.defaultKey,\n              name: api.defaultCity,\n              favorite: true\n            };\n            this.addRemoveAction = 'Remove From  Favorites';\n          } else {\n            this.selectedCountry = {\n              key: api.defaultKey,\n              name: api.defaultCity,\n              favorite: false\n            };\n            this.addRemoveAction = 'Add To Favorites';\n          }\n        } else {\n          this.selectedCountry = {\n            key: api.defaultKey,\n            name: api.defaultCity,\n            favorite: false\n          };\n          this.addRemoveAction = 'Add To Favorites';\n        }\n      })\n    } else {\n      this.selectedCountry = {\n        key: key,\n        name: this.route.snapshot.paramMap.get('city'),\n        favorite: true\n      }  \n      this.addRemoveAction = 'Remove From Favorites';\n    }\n    this.currentCity = this.selectedCountry.name;\n    this.header = `${this.selectedCountry.name}${this.title}`;\n\n    this.subscription1 = this.lacationService.getForeCast(this.selectedCountry.key)\n    .pipe(catchError(err => this.errorR = err )).subscribe( (res: DailyForecasts) => {\n      this.dailyForecasts = res;\n      this.getForecasts(res);\n     }); \n  }\n\n  searchCountry( event ) {\n    this.subscription2 = this.lacationService.getLocations( event.query )\n      .pipe(catchError(err => this.errorR = err )).subscribe( (res: City[] ) => {\n      this.countriesSuggestions = res.map(country => {\n        return {\n          key: country.Key,\n          name: country.LocalizedName,\n          favorite: false\n        }\n      })\n   });\n\n  }\n\n  getUrl( icon ) {\n    let idIcon = icon < 10 ? `0${icon}` : icon;\n    return `${api.imageBaseUrl}${idIcon}-s.png`;\n  }\n\n  selectCountry( event ) {  //City \n    this.currentCity = event.name;\n    this.header = `${this.currentCity}${this.title}`;\n    this.currencyCityKey = event.key;\n\n    this.subscription3 = this.lacationService.getForeCast(this.currencyCityKey)\n      .pipe(catchError(err => this.errorR = err )).subscribe( (res: DailyForecasts) => {\n      this.getForecasts(res);\n    });\n\n    this.subscription4 = this.store.select(selectFavorites ).subscribe( favoritesArr => {\n      if ( favoritesArr.length != 0 ) {\n        if ( favoritesArr.filter( item => item.key == event.key ).length != 0 ) {\n          this.selectedCountry = {\n            key: event.key,\n            name: event.name,\n            favorite: true\n          };\n          this.addRemoveAction = 'Remove From Favorites';\n        }else {\n          this.selectedCountry = {\n            key: event.key,\n            name: event.name,\n            favorite: false\n          };\n          this.addRemoveAction = 'Add To Favorites';\n        }\n      } else {\n        this.selectedCountry = {\n          key: event.key,\n          name: event.name,\n          favorite: false\n        };\n        this.addRemoveAction = 'Add To Favorites';\n      }\n    })\n  }\n\n  getForecasts( res ) {\n    this.forecasts = res.DailyForecasts.map( ( day: DailyForecast ) => {\n      return {\n        iconUrl: this.getUrl(day.Day.Icon),\n        day: new Date(day.Date).toLocaleString('en-us', {  weekday: 'short' }),\n        dayLong: new Date(day.Date).toLocaleString('en-us', {  weekday: 'long' }),\n        minTemp: day.Temperature.Minimum.Value.toString(),\n        maxTemp: day.Temperature.Maximum.Value.toString(),\n        unit: day.Temperature.Maximum.Unit,\n        description: day.Day.IconPhrase,\n        selected: false\n      };\n    });\n    this.selectedDay = this.forecasts[0];\n    this.selectedDay.selected = true;\n  }\n\n  onClick( forecast ) {\n    this.forecasts.filter( res => res.selected == true )[0].selected = false;\n    this.selectedDay = forecast;\n    this.selectedDay.selected = true;\n  }\n\n  addOrRemoteFavorite( city ) {\n    if ( city.favorite == false ) {\n      this.selectedCountry = {\n        key: this.selectedCountry.key,\n        name: this.selectedCountry.name,\n        favorite: true\n      }\n      this.store.dispatch( new FavoriteActions.AddToFavorites( {\"key\": this.selectedCountry.key.toString(),\n      \"cityName\": this.selectedCountry.name} ));\n      \n      this.addRemoveAction = 'Remove From Favorites';\n    } else {\n      this.store.dispatch( new FavoriteActions.RemoveFromFavorites( city.key ));\n      this.selectedCountry = {\n        key: this.selectedCountry.key,\n        name: this.selectedCountry.name,\n        favorite: false\n      }\n      this.addRemoveAction = 'Add To Favorites';\n    }  \n  }\n\n  ngOnDestroy() {\n    this.subscription1.unsubscribe();\n    this.subscription2.unsubscribe();\n    this.subscription3.unsubscribe();\n    this.subscription4.unsubscribe();\n    this.subscription5.unsubscribe();\n  }\n  \n}","\n<div class=\"main\" *ngIf=\"!errorR\">\n    <app-header class=\"header\" [header]=\"header\"></app-header>\n    <div class=\"autocomplete d-flex justify-content-center\">\n        <div class=\"search d-flex justify-content-center\">\n            <span class=\"d-flex justify-content-center align-items-center\"><i class=\"fa fa-search fa-fw\"></i></span>\n        </div>\n        <p-autoComplete [ngClass]=\"{'favorite': selectedCountry.favorite }\" [(ngModel)]=\"selectedCountry\" [suggestions]=\"countriesSuggestions\" field=\"name\"\n                            (completeMethod)=\"searchCountry($event)\"\n                            [dropdown]=\"true\" (onSelect)=\"selectCountry($event)\"></p-autoComplete>\n        \n            <button class=\"buttonF\" (click)=\"addOrRemoteFavorite(selectedCountry)\">{{ addRemoveAction }}</button>\n      \n    </div>\n\n    <div class=\"selected d-flex flex-row\">\n        <div>\n            <div class=\"city\">{{ currentCity  }}</div>\n            <div class=\"day\" >{{ selectedDay?.dayLong }}</div>\n            <div class=\"description\" >{{ selectedDay?.description }}</div>\n        </div>\n        \n        <div class=\"details d-flex flex-row\" >\n            <img class=\"img\" [src]=\"selectedDay?.iconUrl\" width=\"190\" height=\"120\">\n            <div class=\"temp\">{{ selectedDay?.maxTemp }}{{selectedDay?.unit}}</div>\n        </div>\n    </div>\n\n    <div class=\"container d-flex justify-content-between flex-wrap\">\n        <app-daily-forecast class=\"item\" *ngFor=\"let forecast of forecasts\" [forecast]=\"forecast\"\n                                (click)=\"onClick(forecast)\"></app-daily-forecast>\n    </div>\n    \n</div>\n<div *ngIf=\"errorR\" class=\"backdrop\">\n    <div class=\"error\">{{errorR}}</div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { HttpService } from '../http.service';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { City, CurrentCondition } from '../models';\nimport { api } from '../globle'\n\n@Injectable()\nexport class WeatherService {\n \n  constructor( private http: HttpService ) { }\n\n  getLocations( keyWord ) {\n    const queryString = new HttpParams().set('apikey', api.apiKey)\n    .set('q', keyWord )\n    .set('language', 'en-us');\n    return this.http.get<City[]> ( api.location, queryString);\n  }\n\n  getForeCast( cityKey ) {\n    const queryString = new HttpParams().set('apikey', api.apiKey);\n    return this.http.get( `${api.forecast}${cityKey}`, queryString);\n    \n  }\n\n  getCurrentCondition( cityKey ) {\n    const queryString = new HttpParams().set('apikey', api.apiKey);\n    return this.http.get<CurrentCondition[]>( `${api.currentCondition}${cityKey}`, queryString);\n  }\n\n\n  /*  getLocations ( keyWord ) {\n    return [\n      {\n        \"Version\": 1,\n        \"Key\": \"215854\",\n        \"Type\": \"City\",\n        \"Rank\": 31,\n        \"LocalizedName\": \"Tel Aviv\",\n        \"Country\": {\n          \"ID\": \"IL\",\n          \"LocalizedName\": \"Israel\"\n        },\n        \"AdministrativeArea\": {\n          \"ID\": \"TA\",\n          \"LocalizedName\": \"Tel Aviv\"\n        }\n      },\n      {\n        \"Version\": 1,\n        \"Key\": \"3431644\",\n        \"Type\": \"City\",\n        \"Rank\": 45,\n        \"LocalizedName\": \"Telanaipura\",\n        \"Country\": {\n          \"ID\": \"ID\",\n          \"LocalizedName\": \"Indonesia\"\n        },\n        \"AdministrativeArea\": {\n          \"ID\": \"JA\",\n          \"LocalizedName\": \"Jambi\"\n        }\n      },\n      {\n        \"Version\": 1,\n        \"Key\": \"300558\",\n        \"Type\": \"City\",\n        \"Rank\": 45,\n        \"LocalizedName\": \"Telok Blangah New Town\",\n        \"Country\": {\n          \"ID\": \"SG\",\n          \"LocalizedName\": \"Singapore\"\n        },\n        \"AdministrativeArea\": {\n          \"ID\": \"05\",\n          \"LocalizedName\": \"South West\"\n        }\n      },\n      {\n        \"Version\": 1,\n        \"Key\": \"325876\",\n        \"Type\": \"City\",\n        \"Rank\": 51,\n        \"LocalizedName\": \"Telford\",\n        \"Country\": {\n          \"ID\": \"GB\",\n          \"LocalizedName\": \"United Kingdom\"\n        },\n        \"AdministrativeArea\": {\n          \"ID\": \"TFW\",\n          \"LocalizedName\": \"Telford and Wrekin\"\n        }\n      },\n      {\n        \"Version\": 1,\n        \"Key\": \"169072\",\n        \"Type\": \"City\",\n        \"Rank\": 51,\n        \"LocalizedName\": \"Telavi\",\n        \"Country\": {\n          \"ID\": \"GE\",\n          \"LocalizedName\": \"Georgia\"\n        },\n        \"AdministrativeArea\": {\n          \"ID\": \"KA\",\n          \"LocalizedName\": \"Kakheti\"\n        }\n      },\n      {\n        \"Version\": 1,\n        \"Key\": \"230611\",\n        \"Type\": \"City\",\n        \"Rank\": 51,\n        \"LocalizedName\": \"Telsiai\",\n        \"Country\": {\n          \"ID\": \"LT\",\n          \"LocalizedName\": \"Lithuania\"\n        },\n        \"AdministrativeArea\": {\n          \"ID\": \"TE\",\n          \"LocalizedName\": \"Telšiai\"\n        }\n      },\n      {\n        \"Version\": 1,\n        \"Key\": \"2723742\",\n        \"Type\": \"City\",\n        \"Rank\": 55,\n        \"LocalizedName\": \"Telégrafo\",\n        \"Country\": {\n          \"ID\": \"BR\",\n          \"LocalizedName\": \"Brazil\"\n        },\n        \"AdministrativeArea\": {\n          \"ID\": \"PA\",\n          \"LocalizedName\": \"Pará\"\n        }\n      },\n      {\n        \"Version\": 1,\n        \"Key\": \"186933\",\n        \"Type\": \"City\",\n        \"Rank\": 55,\n        \"LocalizedName\": \"Tela\",\n        \"Country\": {\n          \"ID\": \"HN\",\n          \"LocalizedName\": \"Honduras\"\n        },\n        \"AdministrativeArea\": {\n          \"ID\": \"AT\",\n          \"LocalizedName\": \"Atlántida\"\n        }\n      },\n      {\n        \"Version\": 1,\n        \"Key\": \"3453754\",\n        \"Type\": \"City\",\n        \"Rank\": 55,\n        \"LocalizedName\": \"Telaga Asih\",\n        \"Country\": {\n          \"ID\": \"ID\",\n          \"LocalizedName\": \"Indonesia\"\n        },\n        \"AdministrativeArea\": {\n          \"ID\": \"JB\",\n          \"LocalizedName\": \"West Java\"\n        }\n      },\n      {\n        \"Version\": 1,\n        \"Key\": \"3453755\",\n        \"Type\": \"City\",\n        \"Rank\": 55,\n        \"LocalizedName\": \"Telagamurni\",\n        \"Country\": {\n          \"ID\": \"ID\",\n          \"LocalizedName\": \"Indonesia\"\n        },\n        \"AdministrativeArea\": {\n          \"ID\": \"JB\",\n          \"LocalizedName\": \"West Java\"\n        }\n      }\n    ];\n  }\n\n  getForeCast( cityKey ) {\n    return {\n      \"Headline\": {\n        \"EffectiveDate\": \"2020-07-18T08:00:00+03:00\",\n        \"EffectiveEpochDate\": 1595048400,\n        \"Severity\": 4,\n        \"Text\": \"Pleasant this weekend\",\n        \"Category\": \"mild\",\n        \"EndDate\": null,\n        \"EndEpochDate\": null,\n        \"MobileLink\": \"http://m.accuweather.com/en/gr/athens/182536/extended-weather-forecast/182536?lang=en-us\",\n        \"Link\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?lang=en-us\"\n      },\n      \"DailyForecasts\": [\n        {\n          \"Date\": \"2020-07-17T07:00:00+03:00\",\n          \"EpochDate\": 1594958400,\n          \"Temperature\": {\n            \"Minimum\": {\n              \"Value\": 71,\n              \"Unit\": \"F\",\n              \"UnitType\": 18\n            },\n            \"Maximum\": {\n              \"Value\": 87,\n              \"Unit\": \"F\",\n              \"UnitType\": 18\n            }\n          },\n          \"Day\": {\n            \"Icon\": 1,\n            \"IconPhrase\": \"Sunny\",\n            \"HasPrecipitation\": false\n          },\n          \"Night\": {\n            \"Icon\": 33,\n            \"IconPhrase\": \"Clear\",\n            \"HasPrecipitation\": false\n          },\n          \"Sources\": [\n            \"AccuWeather\"\n          ],\n          \"MobileLink\": \"http://m.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=1&lang=en-us\",\n          \"Link\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=1&lang=en-us\"\n        },\n        {\n          \"Date\": \"2020-07-18T07:00:00+03:00\",\n          \"EpochDate\": 1595044800,\n          \"Temperature\": {\n            \"Minimum\": {\n              \"Value\": 70,\n              \"Unit\": \"F\",\n              \"UnitType\": 18\n            },\n            \"Maximum\": {\n              \"Value\": 88,\n              \"Unit\": \"F\",\n              \"UnitType\": 18\n            }\n          },\n          \"Day\": {\n            \"Icon\": 1,\n            \"IconPhrase\": \"Sunny\",\n            \"HasPrecipitation\": false\n          },\n          \"Night\": {\n            \"Icon\": 33,\n            \"IconPhrase\": \"Clear\",\n            \"HasPrecipitation\": false\n          },\n          \"Sources\": [\n            \"AccuWeather\"\n          ],\n          \"MobileLink\": \"http://m.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=2&lang=en-us\",\n          \"Link\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=2&lang=en-us\"\n        },\n        {\n          \"Date\": \"2020-07-19T07:00:00+03:00\",\n          \"EpochDate\": 1595131200,\n          \"Temperature\": {\n            \"Minimum\": {\n              \"Value\": 69,\n              \"Unit\": \"F\",\n              \"UnitType\": 18\n            },\n            \"Maximum\": {\n              \"Value\": 88,\n              \"Unit\": \"F\",\n              \"UnitType\": 18\n            }\n          },\n          \"Day\": {\n            \"Icon\": 2,\n            \"IconPhrase\": \"Mostly sunny\",\n            \"HasPrecipitation\": false\n          },\n          \"Night\": {\n            \"Icon\": 33,\n            \"IconPhrase\": \"Clear\",\n            \"HasPrecipitation\": false\n          },\n          \"Sources\": [\n            \"AccuWeather\"\n          ],\n          \"MobileLink\": \"http://m.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=3&lang=en-us\",\n          \"Link\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=3&lang=en-us\"\n        },\n        {\n          \"Date\": \"2020-07-20T07:00:00+03:00\",\n          \"EpochDate\": 1595217600,\n          \"Temperature\": {\n            \"Minimum\": {\n              \"Value\": 71,\n              \"Unit\": \"F\",\n              \"UnitType\": 18\n            },\n            \"Maximum\": {\n              \"Value\": 89,\n              \"Unit\": \"F\",\n              \"UnitType\": 18\n            }\n          },\n          \"Day\": {\n            \"Icon\": 2,\n            \"IconPhrase\": \"Mostly sunny\",\n            \"HasPrecipitation\": false\n          },\n          \"Night\": {\n            \"Icon\": 33,\n            \"IconPhrase\": \"Clear\",\n            \"HasPrecipitation\": false\n          },\n          \"Sources\": [\n            \"AccuWeather\"\n          ],\n          \"MobileLink\": \"http://m.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=4&lang=en-us\",\n          \"Link\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=4&lang=en-us\"\n        },\n        {\n          \"Date\": \"2020-07-21T07:00:00+03:00\",\n          \"EpochDate\": 1595304000,\n          \"Temperature\": {\n            \"Minimum\": {\n              \"Value\": 75,\n              \"Unit\": \"F\",\n              \"UnitType\": 18\n            },\n            \"Maximum\": {\n              \"Value\": 91,\n              \"Unit\": \"F\",\n              \"UnitType\": 18\n            }\n          },\n          \"Day\": {\n            \"Icon\": 1,\n            \"IconPhrase\": \"Sunny\",\n            \"HasPrecipitation\": false\n          },\n          \"Night\": {\n            \"Icon\": 33,\n            \"IconPhrase\": \"Clear\",\n            \"HasPrecipitation\": false\n          },\n          \"Sources\": [\n            \"AccuWeather\"\n          ],\n          \"MobileLink\": \"http://m.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=5&lang=en-us\",\n          \"Link\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=5&lang=en-us\"\n        }\n      ]\n    };\n  }  */\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}